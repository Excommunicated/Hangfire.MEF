{
  "name": "Hangfire.MEF",
  "tagline": "HangFire job activator based on MEF IoC Container",
  "body": "[Hangfire](http://hangfire.io) background job activator based on \r\n[MEF](http://msdn.microsoft.com/en-us/library/dd460648(v=vs.110).aspx) IoC Container. It allows you to use instance\r\nmethods of classes that define parametrised constructors:\r\n\r\n```csharp\r\n[Export]\r\npublic class EmailService\r\n{\r\n\tprivate DbContext _context;\r\n    private IEmailSender _sender;\r\n\t\r\n\t[ImportingConstructor]\r\n\tpublic EmailService(DbContext context, IEmailSender sender)\r\n\t{\r\n\t\t_context = context;\r\n\t\t_sender = sender;\r\n\t}\r\n\t\r\n\tpublic void Send(int userId, string message)\r\n\t{\r\n\t\tvar user = _context.Users.Get(userId);\r\n\t\t_sender.Send(user.Email, message);\r\n\t}\r\n}\t\r\n\r\n// Somewhere in the code\r\nBackgroundJob.Enqueue<EmailService>(x => x.Send(1, \"Hello, world!\"));\r\n```\r\n\r\nImprove the testability of your jobs without static factories!\r\n\r\nInstallation\r\n--------------\r\n\r\nHangfire.MEF is available as a NuGet Package. Type the following\r\ncommand into NuGet Package Manager Console window to install it:\r\n\r\n```\r\nInstall-Package Hangfire.MEF\r\n```\r\n\r\nUsage\r\n------\r\n\r\nThe package provides an extension method for [OWIN bootstrapper](http://docs.hangfire.io/en/latest/users-guide/getting-started/owin-bootstrapper.html):\r\n\r\n```csharp\r\nAggregateCatalog catalog = new AggregateCatalog();\r\ncatalog.Catalogs.Add(new AssemblyCatalog(Assembly.GetExecutingAssembly()));\r\n// add other assembly, directory, aggregate catalogs etc. here\r\nvar container = new CompositionContainer(catalog);\r\n\r\napp.UseHangfire(config =>\r\n{\r\n    config.UseMEFActivator(container);\r\n});\r\n```\r\n\r\nIn order to use the library outside of web application, set the static `JobActivator.Current` property:\r\n\r\n```csharp\r\nvar container = new CompositionContainer();\r\nJobActivator.Current = new MEFJobActivator(container);\r\n```\r\n\r\nHTTP Request warnings\r\n-----------------------\r\n\r\nServices registered with `InRequestScope()` directive **will be unavailable**\r\nduring job activation, you should re-register these services without this\r\nhint.\r\n\r\n`HttpContext.Current` is also **not available** during the job performance. \r\nDon't use it!\r\n\r\nCredits\r\n--------\r\n\r\nThis project and this readme is based on the [Hangfire.Ninject](https://github.com/HangfireIO/Hangfire.Ninject) \r\nproject by [Sergey Odinokov](https://github.com/odinserj) Many thanks go out to him for his great work on the\r\n [Hangfire](http://hangfire.io) project as well.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}